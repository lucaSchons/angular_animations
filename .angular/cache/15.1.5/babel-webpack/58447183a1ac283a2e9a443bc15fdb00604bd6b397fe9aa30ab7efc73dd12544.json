{"ast":null,"code":"import { Validators } from '@angular/forms';\nexport class ListaTarefasComponent {\n  constructor(service, router, fomBuilder) {\n    this.service = service;\n    this.router = router;\n    this.fomBuilder = fomBuilder;\n    this.listaTarefas = [];\n    this.formAberto = false;\n    this.categoria = '';\n    this.validado = false;\n    this.indexTarefa = -1;\n    this.formulario = this.fomBuilder.group({\n      id: [0],\n      descricao: ['', Validators.required],\n      statusFinalizado: [false, Validators.required],\n      categoria: ['', Validators.required],\n      prioridade: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.service.listar(this.categoria).subscribe(listaTarefas => {\n      this.listaTarefas = listaTarefas;\n    });\n    return this.listaTarefas;\n  }\n  mostrarOuEsconderFormulario() {\n    this.formAberto = !this.formAberto;\n    this.resetarFormulario();\n  }\n  salvarTarefa() {\n    if (this.formulario.value.id) {\n      this.editarTarefa();\n    } else {\n      this.criarTarefa();\n    }\n  }\n  editarTarefa() {\n    this.service.editar(this.formulario.value).subscribe({\n      complete: () => this.atualizarComponente()\n    });\n  }\n  criarTarefa() {\n    this.service.criar(this.formulario.value).subscribe({\n      complete: () => this.atualizarComponente()\n    });\n  }\n  excluirTarefa(id) {\n    if (id) {\n      this.service.excluir(id).subscribe({\n        complete: () => this.recarregarComponente()\n      });\n    }\n  }\n  cancelar() {\n    this.resetarFormulario();\n    this.formAberto = false;\n  }\n  resetarFormulario() {\n    this.formulario.reset({\n      descricao: '',\n      statusFinalizado: false,\n      categoria: '',\n      prioridade: ''\n    });\n  }\n  recarregarComponente() {\n    this.router.navigate(['/listaTarefas']);\n  }\n  atualizarComponente() {\n    this.recarregarComponente();\n    this.resetarFormulario();\n  }\n  carregarParaEditar(id) {\n    this.service.buscarPorId(id).subscribe(tarefa => {\n      this.formulario = this.fomBuilder.group({\n        id: [tarefa.id],\n        descricao: [tarefa.descricao],\n        categoria: [tarefa.categoria],\n        statusFinalizado: [tarefa.statusFinalizado],\n        prioridade: [tarefa.prioridade]\n      });\n    });\n    this.formAberto = true;\n  }\n  finalizarTarefa(id) {\n    this.service.buscarPorId(id).subscribe(tarefa => {\n      this.service.atualizarStatusTarefa(tarefa).subscribe(() => {\n        this.listarAposCheck();\n      });\n    });\n  }\n  listarAposCheck() {\n    this.service.listar(this.categoria).subscribe(listaTarefas => {\n      this.listaTarefas = listaTarefas;\n    });\n  }\n  habilitarBotao() {\n    if (this.formulario.valid) {\n      return 'botao-salvar';\n    } else return 'botao-desabilitado';\n  }\n  campoValidado(campoAtual) {\n    if (this.formulario.get(campoAtual)?.errors && this.formulario.get(campoAtual)?.touched) {\n      this.validado = false;\n      return 'form-tarefa input-invalido';\n    } else {\n      this.validado = true;\n      return 'form-tarefa';\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","ListaTarefasComponent","constructor","service","router","fomBuilder","group","id","descricao","required","statusFinalizado","categoria","prioridade","ngOnInit","listar","subscribe","listaTarefas","mostrarOuEsconderFormulario","formAberto","resetarFormulario","salvarTarefa","formulario","value","editarTarefa","criarTarefa","editar","complete","atualizarComponente","criar","excluirTarefa","excluir","recarregarComponente","cancelar","reset","navigate","carregarParaEditar","buscarPorId","tarefa","finalizarTarefa","atualizarStatusTarefa","listarAposCheck","habilitarBotao","valid","campoValidado","campoAtual","get","errors","touched","validado"],"sourceRoot":"","sources":["/home/lucas/2806-animacoes-projeto-base/src/app/lista-tarefas/lista-tarefas.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { state, style, transition, trigger } from '@angular/animations';\n\nimport { TarefaService } from 'src/app/service/tarefa.service';\nimport { Tarefa } from '../interface/tarefa';\n\n@Component({\n  selector: 'app-lista-tarefas',\n  templateUrl: './lista-tarefas.component.html',\n  styleUrls: ['./lista-tarefas.component.css'],\n  animations: [trigger('highlightedState', [\n    state('default', style({\n      border: '2px solid #B2B6FF'\n    })),\n    state('highlighted', style({\n      border: '4px solid #B2B6FF',\n      filter: 'brightness(92%)'\n    })),\n    transition('default => highlighted', [\n      style({\n        transform: 'scale(1.02)'\n      }),\n      animate(200);\n\n    ])\n  ])]\n})\nexport class ListaTarefasComponent implements OnInit {\n  listaTarefas: Tarefa[] = [];\n  formAberto: boolean = false;\n  categoria: string = '';\n  validado: boolean = false;\n  indexTarefa = -1;\n\n  formulario: FormGroup = this.fomBuilder.group({\n    id: [0],\n    descricao: ['', Validators.required],\n    statusFinalizado: [false, Validators.required],\n    categoria: ['', Validators.required],\n    prioridade: ['', Validators.required],\n  });\n\n  constructor(\n    private service: TarefaService,\n    private router: Router,\n    private fomBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): Tarefa[] {\n    this.service.listar(this.categoria).subscribe((listaTarefas) => {\n      this.listaTarefas = listaTarefas;\n    });\n    return this.listaTarefas;\n  }\n\n  mostrarOuEsconderFormulario() {\n    this.formAberto = !this.formAberto;\n    this.resetarFormulario();\n  }\n\n  salvarTarefa() {\n    if (this.formulario.value.id) {\n      this.editarTarefa();\n    } else {\n      this.criarTarefa();\n    }\n  }\n\n  editarTarefa() {\n    this.service.editar(this.formulario.value).subscribe({\n      complete: () => this.atualizarComponente(),\n    });\n  }\n\n  criarTarefa() {\n    this.service.criar(this.formulario.value).subscribe({\n      complete: () => this.atualizarComponente(),\n    });\n  }\n\n  excluirTarefa(id: number) {\n    if (id) {\n      this.service.excluir(id).subscribe({\n        complete: () => this.recarregarComponente(),\n      });\n    }\n  }\n\n  cancelar() {\n    this.resetarFormulario();\n    this.formAberto = false;\n  }\n\n  resetarFormulario() {\n    this.formulario.reset({\n      descricao: '',\n      statusFinalizado: false,\n      categoria: '',\n      prioridade: '',\n    });\n  }\n\n  recarregarComponente() {\n    this.router.navigate(['/listaTarefas']);\n  }\n\n  atualizarComponente() {\n    this.recarregarComponente();\n    this.resetarFormulario();\n  }\n\n  carregarParaEditar(id: number) {\n    this.service.buscarPorId(id!).subscribe((tarefa) => {\n      this.formulario = this.fomBuilder.group({\n        id: [tarefa.id],\n        descricao: [tarefa.descricao],\n        categoria: [tarefa.categoria],\n        statusFinalizado: [tarefa.statusFinalizado],\n        prioridade: [tarefa.prioridade],\n      });\n    });\n    this.formAberto = true;\n  }\n\n  finalizarTarefa(id: number) {\n    this.service.buscarPorId(id!).subscribe((tarefa) => {\n      this.service.atualizarStatusTarefa(tarefa).subscribe(() => {\n        this.listarAposCheck();\n      });\n    });\n  }\n\n  listarAposCheck() {\n    this.service.listar(this.categoria).subscribe((listaTarefas) => {\n      this.listaTarefas = listaTarefas;\n    });\n  }\n\n  habilitarBotao(): string {\n    if (this.formulario.valid) {\n      return 'botao-salvar';\n    } else return 'botao-desabilitado';\n  }\n\n  campoValidado(campoAtual: string): string {\n    if (\n      this.formulario.get(campoAtual)?.errors &&\n      this.formulario.get(campoAtual)?.touched\n    ) {\n      this.validado = false;\n      return 'form-tarefa input-invalido';\n    } else {\n      this.validado = true;\n      return 'form-tarefa';\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}